# Ord

'Ord' is danish and/or swedish for 'word'. Ord is a word search machine that may be fed with a list of words and you can then query it for subsets, e.g. all words starting with a certain phrase. To be honest it is pretty much a clone of [morewords.com](http://www.morewords.com/) but grew out of the need to have the results in json instead of html to be able to access it in a service architecture.

## API

The response will be in json and follow this format

    GET http://example.com/<method>/<word>

    {
      'query_string':'<word>',
      'word_in_list':true | false,
      'content':[] | {}
    }

### ``/word/<word>``
  
_Example:_

    GET http://example.com/word/beer

    {
      'query_string':'beer',
      'word_in_list':true,
      'content':{
        'previous':'beeps',
        'next':'beerier'
      }
    }
    
    GET http://example.com/word/reeb

    {
      'query_string':'xrfg',
      'word_in_list':false,
      'content':{}
    }
    
  
### ``/starts-with/<word>``
  
_Example:_

    GET http://example.com/starts-with/beer

    {
      'query_string':'beer',
      'word_in_list':true,
      'content':[
        'beer',
        'beerier',
        'beeriest',
        'beers',
        'beery'
      ]
    }
  
### ``/ends-with/<word>``

_Example:_

    GET http://example.com/ends-with/ale

    {
      'query_string':'beer',
      'word_in_list':true,
      'content':[
        'ambeer',
        'beer'
      ]
    } 
  
### ``/contains/<word>``
  
_Example:_

    GET http://example.com/contains/beer

    {
      'query_string':'beer',
      'word_in_list':true,
      'content':[
        'ambeer',
        'ambeers',
        'bebeeru',
        'bebeerus',
        'beer',
        'beerier',
        'beeriest',
        'beers',
        'beery'
      ]
    }
    